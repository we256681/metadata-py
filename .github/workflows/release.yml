name: 🚀 Publish to PyPI

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for version detection

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build twine

      - name: 🔨 Clean previous builds
        run: |
          rm -rf dist/ build/ *.egg-info/

      - name: 🔍 Verify version
        run: |
          echo "Current version from setup.py:"
          python -c "
          import re
          with open('setup.py', 'r') as f:
              content = f.read()
          match = re.search(r'version\s*=\s*[\"\'](.*?)[\"\']', content)
          if match:
              print(match.group(1))
          else:
              print('Version not found')
          "

      - name: 🔨 Build package
        run: |
          python -m build --sdist --wheel --outdir dist/
          ls -la dist/

      - name: 🚀 Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          echo "Uploading to PyPI..."
          twine upload --verbose --non-interactive --disable-progress-bar dist/*

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}